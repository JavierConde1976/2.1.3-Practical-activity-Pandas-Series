{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5ac3d735-1b82-428d-86e4-1d7d199416e5",
   "metadata": {},
   "source": [
    "PRACTICAL ACTIVITIES - week 2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cefe4b36-6b34-42ea-9788-17063119acf5",
   "metadata": {},
   "source": [
    "2.1.3 Practical activity: Pandas Series"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4f61f64e-1d62-48b1-9549-e406b318a6d9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# import Pandas library\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "be624ca0-8f5d-4b43-91d7-1a3efd58480d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0               Law Enforcement (123)\n",
      "1      Fire and Rescue Services (224)\n",
      "2    Emergency Medical Services (101)\n",
      "3          Emergency Management (999)\n",
      "4                  Public Works (900)\n",
      "dtype: object\n",
      "0      prevention\n",
      "1      mitigation\n",
      "2    preparedness\n",
      "3        response\n",
      "4        recovery\n",
      "dtype: object\n",
      "0          Check carotid pulse (neck)\n",
      "1                    breathing (nose)\n",
      "2    obstructions (nose, ears, mouth)\n",
      "3                 pupils (responsive)\n",
      "4                       consciousness\n",
      "5                     contact details\n",
      "6                           allergies\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "#we create 3 lists\n",
    "\n",
    "Emergency_numbers = pd.Series(['Law Enforcement (123)', 'Fire and Rescue Services (224)',\n",
    "                               'Emergency Medical Services (101)', 'Emergency Management (999)',\n",
    "                               'Public Works (900)'])\n",
    "Emergency_protocols = pd.Series(['prevention', 'mitigation', 'preparedness', 'response', 'recovery'])\n",
    "Emergency_checklist = pd.Series(['Check carotid pulse (neck)', 'breathing (nose)', 'obstructions (nose, ears, mouth)',\n",
    "                                 'pupils (responsive)', 'consciousness', 'contact details', 'allergies'])\n",
    "\n",
    "print(Emergency_numbers)\n",
    "print(Emergency_protocols)\n",
    "print(Emergency_checklist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "31dd88a6-9faa-433c-bf79-da9294695da7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
